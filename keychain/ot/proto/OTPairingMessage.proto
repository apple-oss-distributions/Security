/*
 * Copyright (c) 2018 Apple Inc. All Rights Reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this
 * file.
 *
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

syntax = "proto2";

option objc_class_naming = "extended";
option objc_class_visibility = "hidden";

package OT;

enum SupportType {
    unknown = 0;
    supported = 1;
    not_supported = 2;
}

message supportSOSMessage {
    optional SupportType supported = 1;
}

message supportOctagonMessage {
    optional SupportType supported = 1;
}

message SponsorToApplicantRound1M2 {
    optional uint64 epoch = 1;
}

message ApplicantToSponsorRound2M1 {
    optional string peerID = 1;
    optional bytes permanentInfo = 2;
    optional bytes permanentInfoSig = 3;
    optional bytes stableInfo = 4;
    optional bytes StableInfoSig = 5;
}

message SponsorToApplicantRound2M2{
    optional bytes voucher = 1;
    optional bytes voucherSignature = 2;
    // Claimed for a field, but never used
    //reserved 3;
}

message PairingMessage {
    optional SponsorToApplicantRound1M2 epoch = 1;
    optional ApplicantToSponsorRound2M1 prepare = 2;
    optional SponsorToApplicantRound2M2 voucher = 3;
    // <rdar://problem/55465193> reserved is not a keyword (it should be)
    // reserved 4;
    optional supportOctagonMessage supportsOctagon = 5;
    optional supportSOSMessage supportsSOS = 6;
    optional uint64 version = 7;
}
